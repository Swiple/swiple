[tool.poetry]
name = "Swiple"
version = "0.1.0"
description = ""
authors = ["Kenton Parton <info@swiple.io"]
license = "Elastic License 2.0"

[tool.poetry.dependencies]
python = ">=3.9.0,<3.10"
numpy = ">=1.23.1"
scipy = ">=1.9.0"
great-expectations = "0.15.21"
fastapi = "0.73.0"
fastapi-users-db-opensearch = "^0.0.4"
APScheduler = "3.10.0"
opensearch-py = {version = "^2.1.1", extras = ["async"]}
uvicorn = "^0.18.3"
SQLAlchemy = "==1.4.27"
asyncio = "^3.4.3"
redis = "^4.3.4"
emails = "^0.6"
fastapi-users = "9.3.2"
httpx-oauth = "^0.10.1"
PyYAML = "^6.0"
apprise = "^1.2.1"
pydantic = {extras = ["dotenv"], version = "^1.10.2"}
opensearch-reindexer = "2.0.0"
shellingham = "1.4.0"

[tool.poetry.dev-dependencies]


[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-asyncio = "*"
asgi-lifespan = "*"
httpx = "*"
black = "*"
openmock = "*"
pytest-cov = "*"
pytest-mock = "*"

[tool.poetry.group.postgres]
optional = true
[tool.poetry.group.postgres.dependencies]
psycopg2-binary = { version = ">=2.7.6" }

[tool.poetry.group.redshift]
optional = true
[tool.poetry.group.redshift.dependencies]
psycopg2-binary = { version = ">=2.7.6" }
sqlalchemy-redshift = { version = ">=0.7.7"}

[tool.poetry.group.snowflake]
optional = true
[tool.poetry.group.snowflake.dependencies]
snowflake-connector-python = { version = ">=2.7.11" }
snowflake-sqlalchemy = { version = ">=1.4.1" }

[tool.poetry.group.mysql]
optional = true
[tool.poetry.group.mysql.dependencies]
PyMySQL = { version = ">=0.9.3,<0.10" }

[tool.poetry.group.athena]
optional = true
[tool.poetry.group.athena.dependencies]
pyathena = { version = ">=2.9.0" }

[tool.poetry.group.trino]
optional = true
[tool.poetry.group.trino.dependencies]
trino = { version = ">=0.310.0" }

[tool.poetry.group.bigquery]
optional = true
[tool.poetry.group.bigquery.dependencies]
sqlalchemy-bigquery = "^1.4.4"

[tool.poetry.group.aws-secrets]
optional = true
[tool.poetry.group.aws-secrets.dependencies]
great-expectations = {extras = ["aws_secrets"], version = "0.15.21"}

[tool.poetry.group.azure-secrets]
optional = true
[tool.poetry.group.azure-secrets.dependencies]
great-expectations = {extras = ["azure_secrets"], version = "0.15.21"}

[tool.poetry.group.gcp]
optional = true
[tool.poetry.group.gcp.dependencies]
great-expectations = {extras = ["gcp"], version = "0.15.21"}

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov app/ --cov-report=term-missing"
markers = [
    "user",
]
# Ignore warnings from some third-party dependencies
filterwarnings = [
    "ignore::DeprecationWarning:great_expectations.*:",
    "ignore::DeprecationWarning:marshmallow.*:"
]
