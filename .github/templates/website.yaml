AWSTemplateFormatVersion: 2010-09-09
Description: Cross-region Replication S3 Bucket
Parameters:
  BucketName:
    Type: String
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
Resources:
  RootDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: 'Z2FDTNDATAQYW2' # This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution.
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      Comment: Routes traffic to Swiple website via CloudFront

  WWWDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt RedirectDistribution.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: 'Z2FDTNDATAQYW2' # This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution.
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub "www.${DomainName}"
      Type: A
      Comment: Routes traffic to Swiple website via CloudFront

  VideoContentS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${BucketName}.video"
      AccessControl: Private

  VideoContentS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref VideoContentS3Bucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${VideoContentS3Bucket}/*"
            Principal:
              CanonicalUser: !GetAtt VideoCloudFrontOriginAccessIdentity.S3CanonicalUserId

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  WWWS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "www.${BucketName}"
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
          Protocol: https
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: [ GET, HEAD ]
            AllowedOrigins: [ '*' ]
            AllowedHeaders: [ '*' ]
      VersioningConfiguration:
        Status: Suspended

  WWWS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub "www.${S3Bucket}"
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Principal: "*"
            Resource: !Sub "arn:aws:s3:::www.${S3Bucket}/*"

  LoggingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: "LogDeliveryWrite"
      BucketName: !Sub "${BucketName}.logging"
      LifecycleConfiguration:
        Rules:
          - Id: ExpirationRule
            ExpirationInDays: 7
            Status: Enabled

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for ${DomainName}'

  VideoCloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for ${DomainName}'

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Comment: Routes traffic to Swiple website in S3
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /404.html
        DefaultRootObject: index.html
        CacheBehaviors:
          - ForwardedValues:
              Cookies:
                Forward: none
              Headers: [ ]
              QueryString: "false"
            TargetOriginId: !Sub "S3-Video-${DomainName}"
            ViewerProtocolPolicy: redirect-to-https
            PathPattern: video/*
        DefaultCacheBehavior:
          ForwardedValues:
            Cookies:
              Forward: none
            Headers: [ ]
            QueryString: "false"
          TargetOriginId: !Sub "S3-${DomainName}"
          ViewerProtocolPolicy: redirect-to-https
        Enabled: 'true'
        HttpVersion: http2
        Logging:
          Bucket: !GetAtt LoggingS3Bucket.DomainName
          Prefix: 'cloudfront-logs/'
        PriceClass: PriceClass_100 # US, Canada, and Europe
        Origins:
          - DomainName: !GetAtt S3Bucket.RegionalDomainName
            Id: !Sub "S3-${DomainName}"
            S3OriginConfig:
              OriginAccessIdentity: !Join [ '', [ 'origin-access-identity/cloudfront/', !Ref CloudFrontOriginAccessIdentity ] ]
          - DomainName: !GetAtt VideoContentS3Bucket.RegionalDomainName
            Id: !Sub "S3-Video-${DomainName}"
            S3OriginConfig:
              OriginAccessIdentity: !Join [ '', [ 'origin-access-identity/cloudfront/', !Ref   VideoCloudFrontOriginAccessIdentity ] ]
        ViewerCertificate:
          AcmCertificateArn: !ImportValue SwipleDomainCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  RedirectDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "www.${DomainName}"
        Comment: Routes traffic to Swiple website in S3
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /404.html
        DefaultCacheBehavior:
          ForwardedValues:
            Cookies:
              Forward: none
            Headers: [ ]
            QueryString: "false"
          TargetOriginId: !Sub "S3-${DomainName}"
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: ''
        Enabled: 'true'
        HttpVersion: http2
        Logging:
          Bucket: !GetAtt LoggingS3Bucket.DomainName
          Prefix: 'cloudfront-logs/'
        PriceClass: PriceClass_100 # US, Canada, and Europe
        Origins:
          - DomainName: !Select
            - 1
            - !Split ["//", !GetAtt WWWS3Bucket.WebsiteURL]
            Id: !Sub "S3-${DomainName}"
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        ViewerCertificate:
          AcmCertificateArn: !ImportValue SwipleDomainCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
